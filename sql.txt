CREATE DATABASE IF NOT EXISTS studynest
  DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE studynest;

CREATE TABLE IF NOT EXISTS users (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(191) NOT NULL UNIQUE,
    student_id VARCHAR(32) NOT NULL UNIQUE,
    email VARCHAR(191) NOT NULL UNIQUE,
    bio TEXT NULL,
    profile_picture_url VARCHAR(255) NULL,
    password_hash VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS questions (
id int(11) unsigned NOT NULL AUTO_INCREMENT,
title varchar(255) NOT NULL,
body text NOT NULL,
tags varchar(255) DEFAULT NULL,
author varchar(100) NOT NULL,
anonymous tinyint(1) NOT NULL DEFAULT 0,
votes int(11) NOT NULL DEFAULT 0,
created_at timestamp NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS answers (
id int(11) unsigned NOT NULL AUTO_INCREMENT,
question_id int(11) unsigned NOT NULL,
body text NOT NULL,
author varchar(100) NOT NULL,
votes int(11) NOT NULL DEFAULT 0,
helpful int(11) NOT NULL DEFAULT 0,
is_accepted tinyint(1) NOT NULL DEFAULT 0,
created_at timestamp NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (id),
KEY question_id (question_id),
CONSTRAINT answers_ibfk_1 FOREIGN KEY (question_id) REFERENCES questions (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS resources (
id int(6) unsigned NOT NULL AUTO_INCREMENT,
title varchar(255) NOT NULL,
kind varchar(50) NOT NULL,
course varchar(50) NOT NULL,
semester varchar(50) NOT NULL,
tags text DEFAULT NULL,
description text DEFAULT NULL,
author varchar(100) NOT NULL,
votes int(11) DEFAULT 0,
bookmarks int(11) DEFAULT 0,
flagged tinyint(1) DEFAULT 0,
src_type varchar(20) NOT NULL,
url varchar(255) NOT NULL,
created_at timestamp NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS notes (
id int(11) unsigned NOT NULL AUTO_INCREMENT,
title varchar(255) NOT NULL,
course varchar(255) NOT NULL,
semester varchar(255) NOT NULL,
tags text NOT NULL,
description text DEFAULT NULL,
file_url varchar(255) NOT NULL,
created_at timestamp NULL DEFAULT CURRENT_TIMESTAMP,
updated_at timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS ai_file_checks (
id int(10) unsigned NOT NULL AUTO_INCREMENT,
filename varchar(255) NOT NULL,
mime varchar(120) NOT NULL,
size_kb int(10) unsigned NOT NULL,
words int(10) unsigned NOT NULL,
chars int(10) unsigned NOT NULL,
tokens_est int(10) unsigned NOT NULL,
options_json json DEFAULT NULL,
ip varchar(64) DEFAULT NULL,
created_at timestamp NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS courses (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  course_code VARCHAR(32) NOT NULL,
  course_title VARCHAR(255) NOT NULL,
  department VARCHAR(120) NOT NULL,
  program VARCHAR(120) NOT NULL,
  course_thumbnail VARCHAR(512) NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  KEY idx_department (department),
  KEY idx_program (program)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 1) Staging table
DROP TABLE IF EXISTS tmp_courses;
CREATE TABLE tmp_courses (
  course_code      VARCHAR(32)  NOT NULL,
  course_title     VARCHAR(255) NOT NULL,
  department       VARCHAR(120) NOT NULL,
  program          VARCHAR(120) NOT NULL,
  course_thumbnail VARCHAR(512) NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- 2) Load CSV (adjust path if needed)
LOAD DATA INFILE 'C:/xampp/htdocs/StudyNest/study-nest/src/Datasets/UIU_Course_List.csv'
INTO TABLE tmp_courses
CHARACTER SET utf8mb4
FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"' ESCAPED BY '\\'
LINES TERMINATED BY '\r\n'   -- change to '\n' if needed
IGNORE 1 ROWS
(course_code, course_title, department, program, course_thumbnail);

-- 3) Clean (optional: trim spaces, remove blanks)
UPDATE tmp_courses
SET course_code      = TRIM(course_code),
    course_title     = TRIM(course_title),
    department       = TRIM(department),
    program          = TRIM(program),
    course_thumbnail = TRIM(course_thumbnail);

DELETE FROM tmp_courses
WHERE course_code IS NULL OR course_code = '';

-- 4) Insert ALL rows into courses (duplicates allowed now)
INSERT INTO courses (
  course_code, course_title, department, program, course_thumbnail, created_at, updated_at
)
SELECT
  course_code, course_title, department, program, course_thumbnail, NOW(), NOW()
FROM tmp_courses;

USE studynest;

CREATE TABLE IF NOT EXISTS meetings (
  id           VARCHAR(16)  PRIMARY KEY,
  title        VARCHAR(255) NOT NULL,
  course       VARCHAR(64)  NULL,
  created_by   INT UNSIGNED NULL,
  created_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  status       ENUM('live','ended','scheduled') DEFAULT 'live',
  starts_at    DATETIME NULL,
  ends_at      DATETIME NULL,
  participants INT UNSIGNED NOT NULL DEFAULT 1,
  INDEX (status),
  INDEX (created_at)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS meeting_participants (
  id           INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  meeting_id   VARCHAR(16) NOT NULL,
  user_id      INT UNSIGNED NULL,
  display_name VARCHAR(100) NULL,
  joined_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  left_at      TIMESTAMP NULL DEFAULT NULL,
  FOREIGN KEY (meeting_id) REFERENCES meetings(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


for chatting

-- Messages
CREATE TABLE IF NOT EXISTS messages (
      id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
      conversation_id INT UNSIGNED NOT NULL,
      sender_id INT UNSIGNED NOT NULL,
      body TEXT NULL,
      attachment_url VARCHAR(1024) NULL,
      created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
      KEY idx_conv (conversation_id, id),
      KEY idx_sender (sender_id),
      CONSTRAINT fk_msg_conv FOREIGN KEY (conversation_id) REFERENCES conversations(id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS conversations (
      id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
      a_user_id INT UNSIGNED NOT NULL,
      b_user_id INT UNSIGNED NOT NULL,
      created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
      UNIQUE KEY uniq_pair (a_user_id, b_user_id),
      KEY idx_a (a_user_id),
      KEY idx_b (b_user_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

    CREATE TABLE IF NOT EXISTS message_reads (
      conversation_id INT UNSIGNED NOT NULL,
      user_id INT UNSIGNED NOT NULL,
      last_read_message_id BIGINT UNSIGNED NOT NULL DEFAULT 0,
      updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (conversation_id, user_id),
      KEY idx_user (user_id),
      CONSTRAINT fk_read_conv FOREIGN KEY (conversation_id) REFERENCES conversations(id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


-- 1. Groups table
CREATE TABLE groups (
  id INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  section_name VARCHAR(255) UNIQUE NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- 2. Group members
CREATE TABLE group_members (
  id INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  group_id INT(10) UNSIGNED NOT NULL,
  user_id INT(10) UNSIGNED NOT NULL,
  status ENUM('pending','accepted','rejected') DEFAULT 'pending',
  joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_gm_group FOREIGN KEY (group_id) REFERENCES groups(id) ON DELETE CASCADE,
  CONSTRAINT fk_gm_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 3. Group messages
CREATE TABLE group_messages (
  id INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  group_id INT(10) UNSIGNED NOT NULL,
  user_id INT(10) UNSIGNED NOT NULL,
  message TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_msg_group FOREIGN KEY (group_id) REFERENCES groups(id) ON DELETE CASCADE,
  CONSTRAINT fk_msg_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
) ENGINE=InnoDB;
